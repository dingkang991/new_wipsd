/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef API_TYPES_H
#define API_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>

/* custom thrift includes */

/* begin types */

/* struct ReportEvent */
struct _ReportEvent
{ 
  ThriftStruct parent; 

  /* public */
  gint16 eventId;
  gboolean __isset_eventId;
  gint16 eventLibId;
  gboolean __isset_eventLibId;
  gint64 timeNow;
  gboolean __isset_timeNow;
  gchar * eventInfo;
  gboolean __isset_eventInfo;
  gchar * eventDesc;
  gboolean __isset_eventDesc;
  gchar * mac;
  gboolean __isset_mac;
  gchar * peerMac;
  gboolean __isset_peerMac;
  gchar * proberMac;
  gboolean __isset_proberMac;
  gchar * proberIp;
  gboolean __isset_proberIp;
  gchar * proberPort;
  gboolean __isset_proberPort;
  gint16 channel;
  gboolean __isset_channel;
  gint16 signal;
  gboolean __isset_signal;
  gint16 band;
  gboolean __isset_band;
  gchar * ssid;
  gboolean __isset_ssid;
  gchar * bssid;
  gboolean __isset_bssid;
};
typedef struct _ReportEvent ReportEvent;

struct _ReportEventClass
{
  ThriftStructClass parent;
};
typedef struct _ReportEventClass ReportEventClass;

GType report_event_get_type (void);
#define TYPE_REPORT_EVENT (report_event_get_type())
#define REPORT_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REPORT_EVENT, ReportEvent))
#define REPORT_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_REPORT_EVENT, ReportEventClass))
#define IS_REPORT_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REPORT_EVENT))
#define IS_REPORT_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REPORT_EVENT))
#define REPORT_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REPORT_EVENT, ReportEventClass))

/* constants */

/* struct ReportEventServiceReportArgs */
struct _ReportEventServiceReportArgs
{ 
  ThriftStruct parent; 

  /* public */
  ReportEvent * e;
  gboolean __isset_e;
};
typedef struct _ReportEventServiceReportArgs ReportEventServiceReportArgs;

struct _ReportEventServiceReportArgsClass
{
  ThriftStructClass parent;
};
typedef struct _ReportEventServiceReportArgsClass ReportEventServiceReportArgsClass;

GType report_event_service_report_args_get_type (void);
#define TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS (report_event_service_report_args_get_type())
#define REPORT_EVENT_SERVICE_REPORT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS, ReportEventServiceReportArgs))
#define REPORT_EVENT_SERVICE_REPORT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS, ReportEventServiceReportArgsClass))
#define IS_REPORT_EVENT_SERVICE_REPORT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS))
#define IS_REPORT_EVENT_SERVICE_REPORT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS))
#define REPORT_EVENT_SERVICE_REPORT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_ARGS, ReportEventServiceReportArgsClass))

/* struct ReportEventServiceReportResult */
struct _ReportEventServiceReportResult
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _ReportEventServiceReportResult ReportEventServiceReportResult;

struct _ReportEventServiceReportResultClass
{
  ThriftStructClass parent;
};
typedef struct _ReportEventServiceReportResultClass ReportEventServiceReportResultClass;

GType report_event_service_report_result_get_type (void);
#define TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT (report_event_service_report_result_get_type())
#define REPORT_EVENT_SERVICE_REPORT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT, ReportEventServiceReportResult))
#define REPORT_EVENT_SERVICE_REPORT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT, ReportEventServiceReportResultClass))
#define IS_REPORT_EVENT_SERVICE_REPORT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT))
#define IS_REPORT_EVENT_SERVICE_REPORT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT))
#define REPORT_EVENT_SERVICE_REPORT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REPORT_EVENT_SERVICE_REPORT_RESULT, ReportEventServiceReportResultClass))

#endif /* API_TYPES_H */
